Here's an example of Terraform code to create an Application Load Balancer (ALB) in AWS:

```hcl
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.16"  # Specifies the AWS provider version
    }
  }

  required_version = ">= 1.2.0"  # Specifies the required Terraform version
}

provider "aws" {
  region  = "us-west-2"  # Specifies the AWS region
  profile = "new.profile.name"  # Change this to your AWS profile name
}

# Create a security group for the ALB
resource "aws_security_group" "alb_sg" {
  name        = "alb_sg"
  description = "Allow HTTP and HTTPS traffic"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # Allow HTTP from anywhere
  }

  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # Allow HTTPS from anywhere
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]  # Allow all outbound traffic
  }
}

# Create an ALB
resource "aws_lb" "example_alb" {
  name               = "example-alb"
  internal           = false
  load_balancer_type = "application" #specify network for NLB
  security_groups    = [aws_security_group.alb_sg.id]
  subnets            = ["subnet-0123456789abcdef0", "subnet-abcdef0123456789"]  # Replace with your subnet IDs

  enable_deletion_protection = false

  tags = {
    Name = "example-alb"
  }
}

# Create a target group
resource "aws_lb_target_group" "example_tg" {
  name     = "example-tg"
  port     = 80
  protocol = "HTTP"
  vpc_id   = "vpc-0123456789abcdef0"  # Replace with your VPC ID

  health_check {
    path                = "/"
    interval            = 30
    timeout             = 5
    healthy_threshold   = 2
    unhealthy_threshold = 2
    matcher             = "200"
  }

  tags = {
    Name = "example-tg"
  }
}

# Create a listener for the ALB
resource "aws_lb_listener" "example_listener" {
  load_balancer_arn = aws_lb.example_alb.arn
  port              = 80
  protocol          = "HTTP"

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.example_tg.arn
  }
}
```

### Comments:
- **AWS Provider Version**: Specifies the version of the AWS provider to use.
- **Terraform Version**: Specifies the minimum required version of Terraform.
- **AWS Region**: Specifies the AWS region where resources will be created.
- **AWS Profile**: Specifies the AWS profile to use for authentication.
- **Security Group**: Creates a security group to allow HTTP and HTTPS traffic.
- **ALB**: Creates an Application Load Balancer (ALB) with the specified security group and subnets.
- **Target Group**: Creates a target group for the ALB with a health check configuration.
- **Listener**: Creates a listener for the ALB to forward traffic to the target group.

This configuration will create an ALB with a security group, target group, and listener. 
